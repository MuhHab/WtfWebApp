@model ViewCommentsViewModel

<div class="commentsWrapper">
    <ul class="comments">
        @foreach (var comment in Model.Comments)
        {
            <li class="comment" id="comment-@comment.Id">
                <div class="avatarContainer">
                    @if (!string.IsNullOrEmpty(comment.ImageUrl))
                    {
                        <div class="imgContainer">
                            <img src="@comment.ImageUrl" />
                        </div>
                    }
                </div>
                <span class="poster">@comment.Username</span> @if (comment.Anonymous) { <span class="poster-anon">(unregistered)</span> }
                @if (comment.ParentCommentId != null)
                {
                    // FIXME: this is probably the *least* efficient way to do this.
                    var index = Model.AllComments.TakeWhile(c => c.Id != comment.ParentCommentId).Count();
                    var repliedToUser = Model.AllComments.First(c => c.Id == comment.ParentCommentId).Username;
                    <a href="@string.Format("{0}/{1}#comment-{2}", Model.BaseUrl, index / ViewCommentsViewModel.CommentsPerPage + 1, comment.ParentCommentId)" class="reply-to clean">in reply to @repliedToUser</a>
                }
                <span class="timestamp">
                    <a href="#comment-@comment.Id">@comment.PublishedDate</a>
                    @if (Model.CanFeature)
                    {
                        <br />
                        var action = comment.Featured ? "Unfeature" : "Feature";
                        using (Html.BeginForm(action + "Comment", "Admin", FormMethod.Post))
                        {
                            @Html.Hidden("comment", comment.Id)
                            @Html.Hidden("article", Model.Article.Id)
                            @Html.AntiForgeryToken()
                            <button>@action</button>
                        }
                    }
                    @if (Model.CanReply)
                    {
                        <br>
                        <button onclick="document.getElementById('comment-parent').value = @comment.Id">Reply</button>
                    }
                </span>
                <div>
                    @Html.Raw(comment.BodyHtml)
                </div>
            </li>
        }
        @if (Model.PageCount == 0)
        {
            <li>There are no comments yet.</li>
        }
    </ul>
</div>
