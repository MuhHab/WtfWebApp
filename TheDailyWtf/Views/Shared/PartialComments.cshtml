@model ViewCommentsViewModel

@if (Model.CanEditDelete)
{
    <form action="/admin/delete-comments" method="post" id="real-delete-comment-form">
        @Html.AntiForgeryToken()
        <input type="submit" value="Delete selected comments" />
        @foreach (var comment in Model.Comments)
        {
            <input type="checkbox" name="delete" value="@comment.Id" class="hide" id="real-delete-@comment.Id" />
        }
    </form>
}
<ul class="comments">
    @foreach (var comment in Model.Comments)
    {
        <li itemprop="comment" itemscope itemtype="http://schema.org/Comment" class="comment" id="comment-@comment.Id">
            <span class="poster">@comment.Username</span> @if (comment.Anonymous) { <span class="poster-anon">(unregistered)</span> } else { <span class="poster-token poster-token-@comment.TokenType">(@comment.TokenType)</span> }
            @if (Model.CanEditDelete)
            {
                <span class="poster-ip">IP: @if (comment.UserIP == null) { <code>unknown</code> } else { <a href="/admin/user-comments/by-ip/@Url.Encode(comment.UserIP)"><code>@comment.UserIP</code></a> }</span>
                if (!comment.Anonymous)
                {
                    <span class="poster-token">Token: <a href="/admin/user-comments/by-token/@Url.Encode(comment.UserToken)"><code>@comment.UserToken</code></a></span>
                }
            }
            @if (comment.ParentCommentId != null && Model.AllComments != null)
            {
                // FIXME: this is probably the *least* efficient way to do this.
                var index = Model.AllComments.TakeWhile(c => c.Id != comment.ParentCommentId).Count();
                if (index != Model.AllComments.Count())
                {
                    var repliedToUser = Model.AllComments.ElementAt(index).Username;
                    <a href="@string.Format("{0}/{1}#comment-{2}", Model.BaseUrl, index / ViewCommentsViewModel.CommentsPerPage + 1, comment.ParentCommentId)" class="reply-to clean">in reply to @repliedToUser</a>
                }
            }
            <span class="timestamp" itemprop="datePublished" contenteditable="@comment.PublishedDate.ToString("o")">
                <a itemprop="url" href="#comment-@comment.Id">@comment.PublishedDate.ToString("yyyy-MM-dd")</a>
                @if (Model.CanFeature)
                {
                    <br />
                    var action = comment.Featured ? "Unfeature" : "Feature";
                    using (Html.BeginForm(action + "Comment", "Admin", FormMethod.Post))
                    {
                        @Html.Hidden("comment", comment.Id)
                        @Html.Hidden("article", comment.ArticleId)
                        @Html.AntiForgeryToken()
                        <button>@action</button>
                    }
                }
                @if (Model.CanEditDelete)
                {
                    using (Html.BeginForm("EditComment", "Admin", FormMethod.Post))
                    {
                        @Html.Hidden("comment", comment.Id)
                        @Html.Hidden("article", comment.ArticleId)
                        @Html.AntiForgeryToken()
                        <button>Edit</button>
                    }
                    <label for="delete-@comment.Id">Delete: <input type="checkbox" class="comment-delete" id="delete-@comment.Id" /></label>
                }
                @if (Model.CanReply)
                {
                    <br />
                    <a href="?parent=@comment.Id#comment-form" rel="nofollow" data-reply-to="@comment.Id" class="comment-reply-link">Reply</a>
                    if (!comment.Anonymous && comment.PublishedDate.Add(TheDailyWtf.Controllers.ArticlesController.CommentEditTimeout) > DateTime.Now)
                    {
                        <a href="/articles/comments/@Model.Article.Slug/addendum/@comment.Id" rel="nofollow" data-user="@comment.Username" class="hide comment-edit-link">Edit</a>
                    }
                    <a href="/admin/article/comments/@Model.Article.Id#comment-@comment.Id" rel="nofollow" class="hide admin-only">Admin</a>
                }
            </span>
            <div itemprop="text">
                @Html.Raw(comment.BodyHtml)
            </div>
        </li>
    }
    @if (Model.PageCount == 0)
    {
        <li>There are no comments yet.</li>
    }
</ul>
